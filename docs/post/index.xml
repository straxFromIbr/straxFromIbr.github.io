<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on メモおきば</title>
    <link>https://straxfromibr.github.io/post/</link>
    <description>Recent content in Posts on メモおきば</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 18 Oct 2021 21:11:31 +0900</lastBuildDate><atom:link href="https://straxfromibr.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Bash] timeコマンドの計測結果だけを標準出力に流す</title>
      <link>https://straxfromibr.github.io/2021/10/timecmd-stdout/</link>
      <pubDate>Mon, 18 Oct 2021 21:11:31 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/10/timecmd-stdout/</guid>
      <description>もとのコマンドの結果は破棄し、timeコマンドの計測結果だけを標準出力に流す</description>
    </item>
    
    <item>
      <title>研究室のPCの環境構築メモ</title>
      <link>https://straxfromibr.github.io/2021/10/setup-tensorflow-winwsl/</link>
      <pubDate>Mon, 11 Oct 2021 14:02:08 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/10/setup-tensorflow-winwsl/</guid>
      <description>研究室のPCの環境構築メモ</description>
    </item>
    
    <item>
      <title>SysV initで起動するDockerでプロキシを適用する</title>
      <link>https://straxfromibr.github.io/2021/10/systemv-docker-proxy/</link>
      <pubDate>Wed, 06 Oct 2021 12:58:40 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/10/systemv-docker-proxy/</guid>
      <description>Dockerに限らずSysV initで起動するデーモンの環境変数などの設定</description>
    </item>
    
    <item>
      <title>サードパーティ製外部キーボードをMacで使う際の必須設定</title>
      <link>https://straxfromibr.github.io/2021/10/60perc-kbd-for-mac/</link>
      <pubDate>Fri, 01 Oct 2021 09:38:39 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/10/60perc-kbd-for-mac/</guid>
      <description>キーボードを使う際の個人的設定メモ</description>
    </item>
    
    <item>
      <title>アルカナレヴュー曲の歌詞</title>
      <link>https://straxfromibr.github.io/2021/09/arcana-revue-songs/</link>
      <pubDate>Tue, 28 Sep 2021 23:10:42 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/09/arcana-revue-songs/</guid>
      <description>公開済みのアルカナレヴュー曲の歌詞のメモ</description>
    </item>
    
    <item>
      <title>テラフォーミングマーズプレリュード</title>
      <link>https://straxfromibr.github.io/2021/09/tfm-prelude/</link>
      <pubDate>Mon, 27 Sep 2021 21:50:53 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/09/tfm-prelude/</guid>
      <description>テラフォーミングマーズプレリュード拡張のルールと補足</description>
    </item>
    
    <item>
      <title>最近遊んだボードゲームメモ</title>
      <link>https://straxfromibr.github.io/2021/09/good-boardgames/</link>
      <pubDate>Sat, 25 Sep 2021 10:12:05 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/09/good-boardgames/</guid>
      <description>最近遊んだボードゲームのそれぞれの概要と反省点を雑にまとめる</description>
    </item>
    
    <item>
      <title>Zen of Python ~Pythonの悟り~</title>
      <link>https://straxfromibr.github.io/2021/09/zen-of-python/</link>
      <pubDate>Wed, 15 Sep 2021 22:19:00 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/09/zen-of-python/</guid>
      <description>Pythonの真髄ここにあり。</description>
    </item>
    
    <item>
      <title>M1 Mac にTensorFlow v2.5をインストール</title>
      <link>https://straxfromibr.github.io/2021/09/install-tfmetal/</link>
      <pubDate>Wed, 08 Sep 2021 21:51:26 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/09/install-tfmetal/</guid>
      <description>M1 Mac にMetalアクセラレーションのTensorFlow 2.5をインストールする</description>
    </item>
    
    <item>
      <title>Yolov5 on Jetson</title>
      <link>https://straxfromibr.github.io/2021/08/yolov5-on-jetson/</link>
      <pubDate>Tue, 31 Aug 2021 11:00:15 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/08/yolov5-on-jetson/</guid>
      <description>&lt;h1 id=&#34;torchvisionのインストール&#34;&gt;Torchvisionのインストール&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://qengineering.eu/install-pytorch-on-jetson-nano.html&#34;&gt;https://qengineering.eu/install-pytorch-on-jetson-nano.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PyTorch 1.7.0
ビルド済みのwheelがGoogle Driveにアップロードされているためそれを使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install libjpeg-dev zlib1g-dev libpython3-dev
sudo apt install libavcodec-dev libavformat-dev libswscale-dev
python3 -m pip install -U pillow gdown
gdown https://drive.google.com/uc?id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1WhplBjODLjNmYWEvQliCdkt3CqQTsClm
python3 -m pip install torchvision-0.8.1a0+45f960c-cp36-cp36m-linux_aarch64.whl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;seabornのインストール&#34;&gt;Seabornのインストール&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install python3-seaborn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pip&lt;/code&gt;ではなく&lt;code&gt;apt&lt;/code&gt;でインストールする。依存している&lt;code&gt;matplitlib&lt;/code&gt;も同時にインストールする。はいらない場合は&lt;code&gt;apt&lt;/code&gt;で&lt;code&gt;python3-matplotlib&lt;/code&gt;パッケージをインストールする。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Python] クラスの多重継承</title>
      <link>https://straxfromibr.github.io/2021/08/python-multi-inher/</link>
      <pubDate>Fri, 27 Aug 2021 22:19:47 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/08/python-multi-inher/</guid>
      <description>Pythonでクラスの多重継承をしたさいの挙動</description>
    </item>
    
    <item>
      <title>PostgreSQLをSQLAlchemyで使用する</title>
      <link>https://straxfromibr.github.io/2021/08/postgresql-sqlalchemy/</link>
      <pubDate>Sun, 22 Aug 2021 11:44:02 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/08/postgresql-sqlalchemy/</guid>
      <description>PostgreSQLをSQLAlchemyから操作する。</description>
    </item>
    
    <item>
      <title>IlanCosman/tide@v5の変更点</title>
      <link>https://straxfromibr.github.io/2021/08/tide-v5-change/</link>
      <pubDate>Thu, 12 Aug 2021 23:47:22 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/08/tide-v5-change/</guid>
      <description>&lt;p&gt;本日8月12日にリリースされた&lt;a href=&#34;https://github.com/IlanCosman/tide/releases/tag/v5.0.0&#34;&gt;IlanCosman/tide v5.0.0&lt;/a&gt;のアップデート時の注意点や変更点をメモ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>シェルコマンドでデータ分割</title>
      <link>https://straxfromibr.github.io/2021/08/shell-datasplit/</link>
      <pubDate>Tue, 03 Aug 2021 11:01:39 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/08/shell-datasplit/</guid>
      <description>&lt;p&gt;次のように&lt;code&gt;concat&lt;/code&gt;ディレクトリにはいってる&lt;code&gt;*.png&lt;/code&gt;を&lt;code&gt;test&lt;/code&gt;,&lt;code&gt;train&lt;/code&gt;ディレクトリに8:2で分割する.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ tree datasets_2108030001 -d
datasets_2108030001
├── concat
├── test
└── train
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;datasets_2108030001/concat/
├── concat_0.png
├── concat_1.png
~~~省略~~~
├── concat_9998.png
└── concat_9999.png

0 directories, 10000 files
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;次のコマンドを&lt;code&gt;datasets_2108030001/concat/&lt;/code&gt;ディレクトリで実行して分割&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ls | head -n8000 | xargs -J% cp % ../train/
ls | tail -n2000 | xargs -J% cp % ../test/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次のコマンドで重複がないか確認&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;diff &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ls | sort|psub&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ls ../test/ ../train/| sort |psub&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# こんなような出力になる？&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 0a1,3&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;gt; ../test/:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;gt; ../train/:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Alacritty on M1 Mac</title>
      <link>https://straxfromibr.github.io/2021/07/m1-alacritty/</link>
      <pubDate>Thu, 29 Jul 2021 21:42:44 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/m1-alacritty/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;alacritty/alacritty: A cross-platform, OpenGL terminal emulator.&lt;/a&gt;
Alacrittyを使い始めた。YAMLで設定ファイルを管理できるのと動作が軽いのが好ましいのだけどいくつか問題点が。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日本語入力に難アリ&lt;/li&gt;
&lt;li&gt;tmuxのプレフィックスキー(C-Spaceに設定している)が反応しない時がある。(端末を再度立ち上げれば使用できるようになる)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まだM1用の公式ビルドがないので自前でビルドした。それが原因なのかも。&lt;br&gt;
参考までにAlacrittyとtmuxの設定ファイルを&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;alacritty.yml&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;background_opacity&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;key_bindings&lt;/span&gt;:
  - { &lt;span style=&#34;color:#f92672&#34;&gt;key: Key0, mods: Command, action&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ResetFontSize }&lt;/span&gt;
  - { &lt;span style=&#34;color:#f92672&#34;&gt;key: Plus, mods: Command|Shift, action&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;IncreaseFontSize }&lt;/span&gt;
  - { &lt;span style=&#34;color:#f92672&#34;&gt;key: Minus, mods: Command|Shift, action&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;DecreaseFontSize }&lt;/span&gt;
  - { &lt;span style=&#34;color:#f92672&#34;&gt;key: 36, mods: Command, action&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ToggleSimpleFullscreen }&lt;/span&gt;


&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt;:
  - &lt;span style=&#34;color:#ae81ff&#34;&gt;~/.config/alacritty/themes/substrata.yml&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;font&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;normal&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;family&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MesloLGS NF&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Regular&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;bold&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;family&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MesloLGS NF&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Bold&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;italic&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;family&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Meslo LG S for Powerline&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Italic&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;14.5&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;offset&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;y&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;x&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;


&lt;span style=&#34;color:#f92672&#34;&gt;window&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;decolations&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;buttonless &lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;dimensions&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;columns&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;lines&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;padding&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;x&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;y&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;.tmux.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;set-option -g default-shell /opt/homebrew/bin/fish

set-option -g default-terminal screen-256color
set -ga terminal-overrides &amp;quot;,alacritty:Tc&amp;quot;

unbind C-b
set -g prefix C-Space

set -s escape-time 0
set-option -g status-position top

set-option -g status-left-length 90
set-option -g status-right-length 90

set-option -g status-left &#39;#H:[#P]&#39;

set-option -g status-right &#39;#(wifi) #(battery --tmux) [%Y-%m-%d(%a) %H:%M]&#39;
set-option -g status-interval 1
set-option -g status-justify centre
set-option -g status-bg &amp;quot;colour28&amp;quot;

set-option -g status-fg &amp;quot;colour255&amp;quot;

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind | split-window -h

bind - split-window -v

set-option -g base-index 1

set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = &amp;quot;#{mouse_any_flag}&amp;quot; &amp;quot;send-keys -M&amp;quot; &amp;quot;if -Ft= &#39;#{pane_in_mode}&#39; &#39;send-keys -M&#39; &#39;copy-mode -e&#39;&amp;quot;

setw -g mode-keys vi

bind -T copy-mode-vi v send -X begin-selection

bind -T copy-mode-vi V send -X select-line

bind -T copy-mode-vi C-v send -X rectangle-toggle

bind -T copy-mode-vi y send -X copy-selection

bind -T copy-mode-vi Y send -X copy-line

&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>fishシェルの設定ファイル管理</title>
      <link>https://straxfromibr.github.io/2021/07/fish-config/</link>
      <pubDate>Thu, 22 Jul 2021 14:54:35 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/fish-config/</guid>
      <description>fishシェルの設定ファイル管理</description>
    </item>
    
    <item>
      <title>fishのプロンプトにCondaの環境名を表示しないようにする</title>
      <link>https://straxfromibr.github.io/2021/07/tide-erase-condaname/</link>
      <pubDate>Wed, 21 Jul 2021 18:02:22 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/tide-erase-condaname/</guid>
      <description>&lt;p&gt;fishのオシャレなプロンプトフレームワークである&lt;a href=&#34;https://github.com/IlanCosman/tide&#34;&gt;llanCosman/tide&lt;/a&gt;でMiniForge&lt;a href=&#34;https://straxfromibr.github.io/2021/06/fish_tide/&#34;&gt;コンダ環境の名前をプロンプトに表示&lt;/a&gt;するようにした&amp;hellip; のだがデフォルトの表示も残ってしまいイマイチダサいプロンプトになってたので修正。&lt;/p&gt;
&lt;p&gt;手っ取り早く適用したい人は&lt;a href=&#34;https://github.com/jorgebucaran/fisher&#34;&gt;jorgebucaran/fisher: A plugin manager for Fish.&lt;/a&gt;をインストールしたあと次のコマンドを実行。&lt;/p&gt;
&lt;p&gt;結構手軽にプラグインが作成できてびっくりした。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fisher install straxFromIbr/invisible-conda-name
&lt;/code&gt;&lt;/pre&gt;
 
  
  
  
  
    
      
    
  
    
  
    
      
    
  
    
      
    
  

 
  
  
  
  
    
  
    
      
    
  
    
      
    
  

&lt;div class=&#34;figure fig-100 center&#34; &gt;
  
    &lt;a class=&#34;fancybox&#34; href=&#34;https://straxfromibr.github.io/images/tide-erase-condaname/prompt.jpg&#34; title=&#34;プロンプト&#34; data-fancybox-group=&#34;&#34;&gt;
  
    &lt;img class=&#34;fig-img&#34; src=&#34;https://straxfromibr.github.io/images/tide-erase-condaname/prompt.jpg&#34;  alt=&#34;プロンプト&#34;&gt;
  
    &lt;/a&gt;
  
   
    &lt;span class=&#34;caption&#34;&gt;プロンプト&lt;/span&gt;
  
&lt;/div&gt;

  &lt;div style=&#34;clear:both;&#34;&gt;&lt;/div&gt;

&lt;p&gt;変数の一覧から次のようにしてconda環境名を設定してそうな変数を調べると・・・&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;gt; set | grep base | grep -v history
CONDA_DEFAULT_ENV base
CONDA_PROMPT_MODIFIER &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(base) &amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;表示に関わっていそうなのは&lt;code&gt;$CONDA_PROMPT_MODIFIER&lt;/code&gt;であることがわかる。
そのためこの変数を次のコマンドで削除する&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;set -e CONDA_PROMPT_MODIFIER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;するとプロンプト右下の&lt;code&gt;(base)&lt;/code&gt;という表示が消えるはず。&lt;/p&gt;
&lt;p&gt;このコマンドを毎度打つのも非常に手間なのでfishシェルの機能であるイベントハンドラを用いて解決する。次のような関数を適当な&lt;code&gt;~/.config/fish/*.fish&lt;/code&gt;ファイルに定義する。関数名も適当でいい。&lt;code&gt;_&lt;/code&gt;を先頭につけると&lt;code&gt;functions&lt;/code&gt;コマンドで表示されない不可視関数として定義できる。&lt;/p&gt;
&lt;p&gt;この関数でキモとなるのは&lt;code&gt;-e fish_prompt&lt;/code&gt;オプションである。これは新たなfishプロンプトが表時される直前に発生するイベント&lt;code&gt;fish_prompt&lt;/code&gt;時に関数を自動的に実行させるためのオプションである。エンターキーを押すたびに変数を削除するわけですね。&lt;/p&gt;
&lt;p&gt;参考:&lt;a href=&#34;https://fishshell.com/docs/current/cmds/function.html?highlight=function&#34;&gt;function - create a function — fish-shell 3.3.1 documentation&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; _clear_condaenvname -e fish_prompt
    set -e CONDA_PROMPT_MODIFIER
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;おしまい&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emacs Lispのマクロ定義のあの記号はbashでいうアレ</title>
      <link>https://straxfromibr.github.io/2021/07/emacsmacrobash/</link>
      <pubDate>Wed, 21 Jul 2021 16:04:24 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/emacsmacrobash/</guid>
      <description>Emacs Lispのマクロ定義の記号とbashのコマンド展開の(無理のある）対応付け。</description>
    </item>
    
    <item>
      <title>Emacsでvimキーバインディング</title>
      <link>https://straxfromibr.github.io/2021/07/evilinstall/</link>
      <pubDate>Tue, 20 Jul 2021 15:20:15 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/evilinstall/</guid>
      <description>&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GNU Emacs 27.2: Mach-O 64-bit executable arm64
&lt;ul&gt;
&lt;li&gt;Homebrewでインストールしたもの&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;記号処理プログラミングの授業でLisp処理系としてEmacs Lispを使用しているのだけど、viの便利さにすっかり魅了されてしまったがために何か方法はないかと模索。macOSユーザなのにﾅﾝﾃﾞﾀﾞｲ(Macは標準のキーバインドがemacs風)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/emacs-evil/evil&#34;&gt;EVIL&lt;/a&gt;というプラグインを見つけたのでインストール方法をメモ。&lt;/p&gt;
&lt;p&gt;次のコードを&lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;に追記する。その後emacsを起動し&lt;code&gt;M-x package-install RET evil RET&lt;/code&gt;とコマンドを入力。(&lt;code&gt;M-&lt;/code&gt;はエスケープ(メタキー), &lt;code&gt;RET&lt;/code&gt;はリターン)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs&#34; data-lang=&#34;emacs&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; Set up package.el to work with MELPA&lt;/span&gt;
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&lt;/span&gt;)
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package-archives&lt;/span&gt;
             &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://melpa.org/packages/&amp;#34;&lt;/span&gt;))
(package-initialize)
(package-refresh-contents)

&lt;span style=&#34;color:#75715e&#34;&gt;;; Download Evil&lt;/span&gt;
(unless (package-installed-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;evil&lt;/span&gt;)
  (package-install &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;evil&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;;; Enable Evil&lt;/span&gt;
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;evil&lt;/span&gt;)
(evil-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;ちなみに現在の&lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;はこんな感じ。ほとんど素のまま&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs&#34; data-lang=&#34;emacs&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; Initialize MELPA, a package manager&lt;/span&gt;
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&lt;/span&gt;)
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package-archives&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://melpa.org/packages/&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(package-initialize)

&lt;span style=&#34;color:#75715e&#34;&gt;;; Set custom vaiables (??) 公式チュートリアルそのまま&lt;/span&gt;
(custom-set-variables
 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(package-selected-packages &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(evil)))
(custom-set-faces)

&lt;span style=&#34;color:#75715e&#34;&gt;;;; Enable EVIL-mode&lt;/span&gt;
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;evil&lt;/span&gt;)
(evil-mode)


&lt;span style=&#34;color:#75715e&#34;&gt;;; Display line numbers&lt;/span&gt;
(if (version&amp;lt;= &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;26.0.50&amp;#34;&lt;/span&gt; emacs-version)
    (progn
      (global-display-line-numbers-mode)
      (set-face-attribute &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line-number-current-line&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
                           :foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gold&amp;#34;&lt;/span&gt;)))
(setq-default indicate-empty-lines &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(setq-default indicate-buffer-boundaries &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ピンドラスペース配信メモ</title>
      <link>https://straxfromibr.github.io/2021/07/pindora-space1/</link>
      <pubDate>Sun, 18 Jul 2021 22:07:07 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/pindora-space1/</guid>
      <description>7月2日にTwitter Spaceで配信された輪るピングドラムポッドキャスト「こそピン」の(かなり)ざっくりとしたまとめです。聴きながら入力した上に読み直してないのでいろいろ変なところがあるかも。</description>
    </item>
    
    <item>
      <title>Google Maps APIで道路画像取得</title>
      <link>https://straxfromibr.github.io/2021/07/gmap-rawroad/</link>
      <pubDate>Wed, 14 Jul 2021 18:07:28 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/gmap-rawroad/</guid>
      <description>&lt;p&gt;卒研のためのデータセット収集の手段としてGoogle Maps APIの使用を検討している。そのためのテストとして次のような地図の画像を取得した。&lt;/p&gt;
&lt;p&gt;


&lt;div class=&#34;figure fig-50&#34; &gt;
  
    &lt;img class=&#34;fig-img&#34; src=&#34;https://straxfromibr.github.io/images/gmap-rawroad/staticmap.png&#34; &gt;
  
  
&lt;/div&gt;




&lt;div class=&#34;figure fig-50&#34; &gt;
  
    &lt;img class=&#34;fig-img&#34; src=&#34;https://straxfromibr.github.io/images/gmap-rawroad/staticmap-2.png&#34; &gt;
  
  
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;道路画像&#34;&gt;道路画像&lt;/h2&gt;
&lt;p&gt;Google Maps APIに登録しAPI Tokenを取得したあと次に示すURLをブラウザなどで開くと道路の画像が取得できる。
ポイントは&lt;code&gt;style&lt;/code&gt;変数の設定。地図中の&lt;code&gt;road&lt;/code&gt;要素の色を&lt;code&gt;0xFFFFFF&lt;/code&gt;つまり黒に、&lt;code&gt;landscape&lt;/code&gt;の色を一括して&lt;code&gt;0x000000&lt;/code&gt;と白にし、そのほかのfeature,elementを全て不可視にしている。詳細は&lt;a href=&#34;https://developers.google.com/maps/documentation/maps-static/styling?hl=ja&#34;&gt;公式ドキュメント:Styled Maps&lt;/a&gt;に詳しい。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[m1Mac]/usr/local/bin/brewを削除する</title>
      <link>https://straxfromibr.github.io/2021/07/deletebrew/</link>
      <pubDate>Sun, 04 Jul 2021 09:57:22 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/deletebrew/</guid>
      <description>Arm64用のHomebrewがリリースされるまで使っていたx86系のhomebrewを削除したのでメモ</description>
    </item>
    
    <item>
      <title>[Mac]キーボードのアクセントメニューを無効化</title>
      <link>https://straxfromibr.github.io/2021/07/mac-accent-disable/</link>
      <pubDate>Sat, 03 Jul 2021 17:43:40 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/mac-accent-disable/</guid>
      <description>キーボードのアクセントメニューを無効にするためのコマンド．備忘録．</description>
    </item>
    
    <item>
      <title>systemdでGUIアプリケーションを自動実動</title>
      <link>https://straxfromibr.github.io/2021/07/piservice/</link>
      <pubDate>Fri, 02 Jul 2021 20:44:03 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/07/piservice/</guid>
      <description>systemdによりRasPiを起動した際にスクリプトを自動実行するようにするための概略メモ</description>
    </item>
    
    <item>
      <title>Fish tideのアイテム追加</title>
      <link>https://straxfromibr.github.io/2021/06/fish_tide/</link>
      <pubDate>Tue, 29 Jun 2021 22:56:22 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/06/fish_tide/</guid>
      <description>Fishシェルのプロンプトプラグインtideの設定について</description>
    </item>
    
    <item>
      <title>『アバター』メディアミックスまとめ</title>
      <link>https://straxfromibr.github.io/2021/06/avatar-in-other-media/</link>
      <pubDate>Tue, 29 Jun 2021 10:07:59 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/06/avatar-in-other-media/</guid>
      <description>アバターシリーズのコミックやポッドキャスト</description>
    </item>
    
    <item>
      <title>Python環境構築 on RasPi</title>
      <link>https://straxfromibr.github.io/2021/06/raspi_pkginstallation/</link>
      <pubDate>Mon, 28 Jun 2021 20:53:20 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/06/raspi_pkginstallation/</guid>
      <description>RaspberryPi4上にTensorflowなど各種ライブラリをインストールする．</description>
    </item>
    
    <item>
      <title>HammerSpoon小ネタその1</title>
      <link>https://straxfromibr.github.io/2021/06/hmurlutil/</link>
      <pubDate>Sun, 27 Jun 2021 23:27:45 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/06/hmurlutil/</guid>
      <description>URLエンコーディングのショートカットを作成</description>
    </item>
    
    <item>
      <title>Fish環境構築</title>
      <link>https://straxfromibr.github.io/2021/06/fishintro/</link>
      <pubDate>Sat, 26 Jun 2021 14:30:20 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/06/fishintro/</guid>
      <description>fishシェルへの乗り換え案内</description>
    </item>
    
    <item>
      <title>hugoとGithub Pagesでブログ作成</title>
      <link>https://straxfromibr.github.io/2021/06/hugotutorial/</link>
      <pubDate>Wed, 23 Jun 2021 23:05:56 +0900</pubDate>
      
      <guid>https://straxfromibr.github.io/2021/06/hugotutorial/</guid>
      <description>hugoでブログの作成とGitHub Pagesへのアップロード</description>
    </item>
    
  </channel>
</rss>
